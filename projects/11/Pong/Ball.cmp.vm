function Ball.new 0
push constant 15
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 10
push argument 3
push constant 6
sub
pop this 11
push argument 4
pop this 12
push argument 5
push constant 6
sub
pop this 13
push constant 0
pop this 14
push pointer 0
call Ball.show 1
pop temp 0
push pointer 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.show 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 0
push constant 5
add
push this 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Ball.getLeft 0
push argument 0
pop pointer 0
push this 0
return
function Ball.getRight 0
push argument 0
pop pointer 0
push this 0
push constant 5
add
return
function Ball.setDestination 3
push argument 0
pop pointer 0
push argument 1
push this 0
sub
pop this 2
push argument 2
push this 1
sub
pop this 3
push this 2
call Math.abs 1
pop local 0
push this 3
call Math.abs 1
pop local 1
push local 0
push local 1
lt
pop this 7
push this 7
if-goto Ball_IF_TRUE_6b7c497e
goto Ball_IF_FALSE_6b7c497e
label Ball_IF_TRUE_6b7c497e
push local 0
pop local 2
push local 1
pop local 0
push local 2
pop local 1
push this 1
push argument 2
lt
pop this 8
push this 0
push argument 1
lt
pop this 9
goto Ball_IF_END_6b7c497e
label Ball_IF_FALSE_6b7c497e
push this 0
push argument 1
lt
pop this 8
push this 1
push argument 2
lt
pop this 9
label Ball_IF_END_6b7c497e
push constant 2
push local 1
call Math.multiply 2
push local 0
sub
pop this 4
push constant 2
push local 1
call Math.multiply 2
pop this 5
push constant 2
push local 1
push local 0
sub
call Math.multiply 2
pop this 6
push constant 0
return
function Ball.move 0
push argument 0
pop pointer 0
push pointer 0
call Ball.hide 1
pop temp 0
push this 4
push constant 0
lt
if-goto Ball_IF_TRUE_6fde64bc
goto Ball_IF_FALSE_6fde64bc
label Ball_IF_TRUE_6fde64bc
push this 4
push this 5
add
pop this 4
goto Ball_IF_END_6fde64bc
label Ball_IF_FALSE_6fde64bc
push this 4
push this 6
add
pop this 4
push this 9
if-goto Ball_IF_TRUE_1735d4cf
goto Ball_IF_FALSE_1735d4cf
label Ball_IF_TRUE_1735d4cf
push this 7
if-goto Ball_IF_TRUE_c69b38f3
goto Ball_IF_FALSE_c69b38f3
label Ball_IF_TRUE_c69b38f3
push this 0
push constant 4
add
pop this 0
goto Ball_IF_END_c69b38f3
label Ball_IF_FALSE_c69b38f3
push this 1
push constant 4
add
pop this 1
label Ball_IF_END_c69b38f3
goto Ball_IF_END_1735d4cf
label Ball_IF_FALSE_1735d4cf
push this 7
if-goto Ball_IF_TRUE_ab49310f
goto Ball_IF_FALSE_ab49310f
label Ball_IF_TRUE_ab49310f
push this 0
push constant 4
sub
pop this 0
goto Ball_IF_END_ab49310f
label Ball_IF_FALSE_ab49310f
push this 1
push constant 4
sub
pop this 1
label Ball_IF_END_ab49310f
label Ball_IF_END_1735d4cf
label Ball_IF_END_6fde64bc
push this 8
if-goto Ball_IF_TRUE_c80a6ee3
goto Ball_IF_FALSE_c80a6ee3
label Ball_IF_TRUE_c80a6ee3
push this 7
if-goto Ball_IF_TRUE_9acfb103
goto Ball_IF_FALSE_9acfb103
label Ball_IF_TRUE_9acfb103
push this 1
push constant 4
add
pop this 1
goto Ball_IF_END_9acfb103
label Ball_IF_FALSE_9acfb103
push this 0
push constant 4
add
pop this 0
label Ball_IF_END_9acfb103
goto Ball_IF_END_c80a6ee3
label Ball_IF_FALSE_c80a6ee3
push this 7
if-goto Ball_IF_TRUE_8c7f3c3f
goto Ball_IF_FALSE_8c7f3c3f
label Ball_IF_TRUE_8c7f3c3f
push this 1
push constant 4
sub
pop this 1
goto Ball_IF_END_8c7f3c3f
label Ball_IF_FALSE_8c7f3c3f
push this 0
push constant 4
sub
pop this 0
label Ball_IF_END_8c7f3c3f
label Ball_IF_END_c80a6ee3
push this 0
push this 10
gt
not
if-goto Ball_IF_TRUE_f58edd3c
goto Ball_IF_FALSE_f58edd3c
label Ball_IF_TRUE_f58edd3c
push constant 1
pop this 14
push this 10
pop this 0
label Ball_IF_FALSE_f58edd3c
push this 0
push this 11
lt
not
if-goto Ball_IF_TRUE_aed7be6a
goto Ball_IF_FALSE_aed7be6a
label Ball_IF_TRUE_aed7be6a
push constant 2
pop this 14
push this 11
pop this 0
label Ball_IF_FALSE_aed7be6a
push this 1
push this 12
gt
not
if-goto Ball_IF_TRUE_d2fffd93
goto Ball_IF_FALSE_d2fffd93
label Ball_IF_TRUE_d2fffd93
push constant 3
pop this 14
push this 12
pop this 1
label Ball_IF_FALSE_d2fffd93
push this 1
push this 13
lt
not
if-goto Ball_IF_TRUE_efa9a1cc
goto Ball_IF_FALSE_efa9a1cc
label Ball_IF_TRUE_efa9a1cc
push constant 4
pop this 14
push this 13
pop this 1
label Ball_IF_FALSE_efa9a1cc
push pointer 0
call Ball.show 1
pop temp 0
push this 14
return
function Ball.bounce 5
push argument 0
pop pointer 0
push this 2
push constant 10
call Math.divide 2
pop local 2
push this 3
push constant 10
call Math.divide 2
pop local 3
push argument 1
push constant 0
eq
if-goto Ball_IF_TRUE_8706ace1
goto Ball_IF_FALSE_8706ace1
label Ball_IF_TRUE_8706ace1
push constant 10
pop local 4
goto Ball_IF_END_8706ace1
label Ball_IF_FALSE_8706ace1
push this 2
push constant 0
lt
not
push argument 1
push constant 1
eq
and
push this 2
push constant 0
lt
push argument 1
push constant 1
neg
eq
and
or
if-goto Ball_IF_TRUE_b2cb7d36
goto Ball_IF_FALSE_b2cb7d36
label Ball_IF_TRUE_b2cb7d36
push constant 20
pop local 4
goto Ball_IF_END_b2cb7d36
label Ball_IF_FALSE_b2cb7d36
push constant 5
pop local 4
label Ball_IF_END_b2cb7d36
label Ball_IF_END_8706ace1
push this 14
push constant 1
eq
if-goto Ball_IF_TRUE_c794c916
goto Ball_IF_FALSE_c794c916
label Ball_IF_TRUE_c794c916
push constant 506
pop local 0
push local 3
push constant 50
neg
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto Ball_IF_END_c794c916
label Ball_IF_FALSE_c794c916
push this 14
push constant 2
eq
if-goto Ball_IF_TRUE_88b2165e
goto Ball_IF_FALSE_88b2165e
label Ball_IF_TRUE_88b2165e
push constant 0
pop local 0
push local 3
push constant 50
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto Ball_IF_END_88b2165e
label Ball_IF_FALSE_88b2165e
push this 14
push constant 3
eq
if-goto Ball_IF_TRUE_f4939a52
goto Ball_IF_FALSE_f4939a52
label Ball_IF_TRUE_f4939a52
push constant 250
pop local 1
push local 2
push constant 25
neg
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
goto Ball_IF_END_f4939a52
label Ball_IF_FALSE_f4939a52
push constant 0
pop local 1
push local 2
push constant 25
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
label Ball_IF_END_f4939a52
label Ball_IF_END_88b2165e
label Ball_IF_END_c794c916
push pointer 0
push local 0
push local 1
call Ball.setDestination 3
pop temp 0
push constant 0
return