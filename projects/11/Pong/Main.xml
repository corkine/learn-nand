<?xml version="1.0" encoding="UTF-8"?><class><keyword>class</keyword><identifier kind="class" type="Main">Main</identifier><symbol>{</symbol><subroutineDec><keyword>function</keyword><keyword>void</keyword><identifier kind="subroutine" type="function">main</identifier><symbol>(</symbol><parameterList></parameterList><symbol>)</symbol><subroutineBody><symbol>{</symbol><varDec><keyword>var</keyword><identifier kind="class" type="PongGame">PongGame</identifier><identifier kind="var" type="PongGame" is-defined="true" index="0">game</identifier><symbol>;</symbol></varDec><statements><doStatement><keyword>do</keyword><identifier kind="class" type="PongGame" is-using="true">PongGame</identifier><symbol>.</symbol><identifier kind="subroutine" is-using="true">newInstance</identifier><symbol>(</symbol><expressionList></expressionList><symbol>)</symbol><symbol>;</symbol></doStatement><letStatement><keyword>let</keyword><identifier kind="var" type="PongGame" is-defined="true" index="0" is-using="true">game</identifier><symbol>=</symbol><expression><term><identifier kind="class" type="PongGame" is-using="true">PongGame</identifier><symbol>.</symbol><identifier kind="subroutine" is-using="true">getInstance</identifier><symbol>(</symbol><expressionList></expressionList><symbol>)</symbol></term></expression><symbol>;</symbol></letStatement><doStatement><keyword>do</keyword><identifier kind="var" type="PongGame" is-defined="true" index="0" is-using="true">game</identifier><symbol>.</symbol><identifier kind="subroutine" is-using="true">run</identifier><symbol>(</symbol><expressionList></expressionList><symbol>)</symbol><symbol>;</symbol></doStatement><doStatement><keyword>do</keyword><identifier kind="var" type="PongGame" is-defined="true" index="0" is-using="true">game</identifier><symbol>.</symbol><identifier kind="subroutine" is-using="true">dispose</identifier><symbol>(</symbol><expressionList></expressionList><symbol>)</symbol><symbol>;</symbol></doStatement><returnStatement><keyword>return</keyword><symbol>;</symbol></returnStatement></statements><symbol>}</symbol></subroutineBody></subroutineDec><symbol>}</symbol></class>