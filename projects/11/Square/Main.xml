<?xml version="1.0" encoding="UTF-8"?><class><keyword>class</keyword><identifier kind="class" type="Main">Main</identifier><symbol>{</symbol><subroutineDec><keyword>function</keyword><keyword>void</keyword><identifier kind="subroutine" type="function">main</identifier><symbol>(</symbol><parameterList></parameterList><symbol>)</symbol><subroutineBody><symbol>{</symbol><varDec><keyword>var</keyword><identifier kind="class" type="SquareGame">SquareGame</identifier><identifier kind="var" type="SquareGame" is-defined="true" index="0">game</identifier><symbol>;</symbol></varDec><statements><letStatement><keyword>let</keyword><identifier kind="var" type="SquareGame" is-defined="true" index="0" is-using="true">game</identifier><symbol>=</symbol><expression><term><identifier kind="class" type="SquareGame" is-using="true">SquareGame</identifier><symbol>.</symbol><identifier kind="subroutine" is-using="true">new</identifier><symbol>(</symbol><expressionList></expressionList><symbol>)</symbol></term></expression><symbol>;</symbol></letStatement><doStatement><keyword>do</keyword><identifier kind="var" type="SquareGame" is-defined="true" index="0" is-using="true">game</identifier><symbol>.</symbol><identifier kind="subroutine" is-using="true">run</identifier><symbol>(</symbol><expressionList></expressionList><symbol>)</symbol><symbol>;</symbol></doStatement><doStatement><keyword>do</keyword><identifier kind="var" type="SquareGame" is-defined="true" index="0" is-using="true">game</identifier><symbol>.</symbol><identifier kind="subroutine" is-using="true">dispose</identifier><symbol>(</symbol><expressionList></expressionList><symbol>)</symbol><symbol>;</symbol></doStatement><returnStatement><keyword>return</keyword><symbol>;</symbol></returnStatement></statements><symbol>}</symbol></subroutineBody></subroutineDec><symbol>}</symbol></class>