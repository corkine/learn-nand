function Main.main 1
push constant 8001
push constant 16
push constant 1
neg
call Main.fillMemory 3
pop temp 0
push constant 8000
call Memory.peek 1
pop local 0
push local 0
call Main.convert 1
pop temp 0
push constant 0
return
function Main.convert 3
push constant 0
not
pop local 2
label Main_WHILE_AGAIN_a2971982
push local 2
not
if-goto Main_WHILE_BREAK_a2971982
push local 1
push constant 1
add
pop local 1
push local 0
call Main.nextMask 1
pop local 0
push local 1
push constant 16
gt
not
if-goto Main_IF_TRUE_3024514a
goto Main_IF_FALSE_3024514a
label Main_IF_TRUE_3024514a
push argument 0
push local 0
and
push constant 0
eq
not
if-goto Main_IF_TRUE_1a780388
goto Main_IF_FALSE_1a780388
label Main_IF_TRUE_1a780388
push constant 8000
push local 1
add
push constant 1
call Memory.poke 2
pop temp 0
goto Main_IF_END_1a780388
label Main_IF_FALSE_1a780388
push constant 8000
push local 1
add
push constant 0
call Memory.poke 2
pop temp 0
label Main_IF_END_1a780388
goto Main_IF_END_3024514a
label Main_IF_FALSE_3024514a
push constant 0
pop local 2
label Main_IF_END_3024514a
goto Main_WHILE_AGAIN_a2971982
label Main_WHILE_BREAK_a2971982
push constant 0
return
function Main.nextMask 0
push argument 0
push constant 0
eq
if-goto Main_IF_TRUE_2f5369a6
goto Main_IF_FALSE_2f5369a6
label Main_IF_TRUE_2f5369a6
push constant 1
return
goto Main_IF_END_2f5369a6
label Main_IF_FALSE_2f5369a6
push argument 0
push constant 2
call Math.multiply 2
return
label Main_IF_END_2f5369a6
function Main.fillMemory 0
label Main_WHILE_AGAIN_c421a06d
push argument 1
push constant 0
gt
not
if-goto Main_WHILE_BREAK_c421a06d
push argument 0
push argument 2
call Memory.poke 2
pop temp 0
push argument 1
push constant 1
sub
pop argument 1
push argument 0
push constant 1
add
pop argument 0
goto Main_WHILE_AGAIN_c421a06d
label Main_WHILE_BREAK_c421a06d
push constant 0
return